// <auto-generated />
using System;
using Clover_Donuts_FE.Server.DataBase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Clover_Donuts_FE.Server.Migrations
{
    [DbContext(typeof(CloverDonutsDbContext))]
    partial class CloverDonutsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.22")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Clover_Donuts_FE.Server.Entities.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Carts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            UserID = 1
                        },
                        new
                        {
                            Id = 2,
                            UserID = 2
                        });
                });

            modelBuilder.Entity("Clover_Donuts_FE.Server.Entities.CartItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CartId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("Clover_Donuts_FE.Server.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Description = "A sweet and fluffy Donut made from scratch in store. ",
                            ImageUrl = "picture/Donuts/glazedurl",
                            Name = "Glazed Donut",
                            Price = 1m,
                            Quantity = 50
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            Description = "A chocolate Donut made from scratch in store. ",
                            ImageUrl = "picture/Donuts/chocolateurl",
                            Name = "Chocolate Donut",
                            Price = 1m,
                            Quantity = 50
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            Description = "Ham egg and cheese on a buttery flaky croissant",
                            ImageUrl = "/Images/Breakfast/HECcroissant.png",
                            Name = "Ham Egg and Cheese Croissant",
                            Price = 4m,
                            Quantity = 10
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 4,
                            Description = "Bacon egg and cheese on a buttery flaky croissant",
                            ImageUrl = "/Images/Breakfast/BECcroissant.png",
                            Name = "Bacon Egg and Cheese Croissant",
                            Price = 4m,
                            Quantity = 8
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 5,
                            Description = "A deli style ham sub with fresh ingredients",
                            ImageUrl = "/Images/Subs/HamSub.png",
                            Name = "Ham Sub",
                            Price = 5m,
                            Quantity = 6
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 6,
                            Description = "A deli style italian sub with fresh ingredients",
                            ImageUrl = "/Images/Subs/ItalianSub.png",
                            Name = "Italian Sub",
                            Price = 5m,
                            Quantity = 6
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 7,
                            Description = "Delicious creamy mocha frappe blended in store",
                            ImageUrl = "/Images/Shoes/Shoes1.png",
                            Name = "Mocha Frappe",
                            Price = 5m,
                            Quantity = 10
                        });
                });

            modelBuilder.Entity("Clover_Donuts_FE.Server.Entities.ProductCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProductCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Donuts"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Breakfast"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Deli Subs"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Frappes"
                        });
                });

            modelBuilder.Entity("Clover_Donuts_FE.Server.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool?>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsAdmin = true,
                            UserName = "Brett"
                        },
                        new
                        {
                            Id = 2,
                            IsAdmin = true,
                            UserName = "Simna"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
